generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  user     String    @unique
  added_on DateTime  @db.Date
  mastId   BigInt    @unique
  tags     UserTag[]
}

model UserTag {
  tag    String
  userId Int
  date   DateTime @db.Date
  id     BigInt   @id @default(autoincrement())
  user   User     @relation(fields: [userId], references: [id])

  @@index([date, tag, userId])
}

model SpicyUser {
  user     String   @unique
  added_on DateTime @db.Date
  id       BigInt   @id @default(autoincrement())
}

model Application {
  domain       String @id
  clientId     String
  clientSecret String
  vapidKey     String
  redirectUris String
}

model ConnectedUser {
  mastodonId  String   @id
  authCode    String?
  connectedOn DateTime @default(now()) @db.Date
  domain      String
}

model MastodonOAuth {
  access_token  String
  refresh_token DateTime
  client_id     String   @id
}

model OpaqueId {
  opaqueId    String   @id
  mastodonId  String
  createdOn   DateTime @default(now()) @db.Date
  accessToken String?
}

model SpicyTags {
  mastodonId String
  tag        String
  hide       Boolean @default(false)

  @@id([mastodonId, tag])
}
